"""20211021 Initial Migration

Revision ID: ebe9667f4e5d
Revises:
Create Date: 2021-10-21 18:56:12.097058

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "ebe9667f4e5d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "organisation",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_organisation")),
        sa.UniqueConstraint("name", name=op.f("uq_organisation_name")),
        schema="auth",
    )
    op.create_table(
        "package",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_package")),
        sa.UniqueConstraint("name", name=op.f("uq_package_name")),
        schema="auth",
    )
    op.create_table(
        "dataset",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("collection", sa.String(), nullable=True),
        sa.Column("priority", sa.Integer(), nullable=True),
        sa.Column("is_hidden", sa.Boolean(), nullable=True),
        sa.Column("is_locked", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_dataset")),
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_dataset_is_hidden"),
        "dataset",
        ["is_hidden"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_dataset_is_locked"),
        "dataset",
        ["is_locked"],
        unique=False,
        schema="meta",
    )
    op.create_table(
        "service",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("conn_uri", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_service")),
        schema="meta",
    )
    op.create_table(
        "dashboard",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_dashboard")),
        schema="space",
    )
    op.create_table(
        "data_import",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_data_import")),
        schema="space",
    )
    op.create_table(
        "panel",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_panel")),
        schema="space",
    )
    op.create_table(
        "pivot",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_pivot")),
        schema="space",
    )
    op.create_table(
        "trend",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_trend")),
        schema="space",
    )
    op.create_table(
        "group",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("organisation_id", sa.Integer(), nullable=True),
        sa.Column("is_user", sa.Boolean(), nullable=True),
        sa.Column("is_default", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["organisation_id"],
            ["auth.organisation.id"],
            name=op.f("fk_group_organisation_id_organisation"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_group")),
        sa.UniqueConstraint(
            "organisation_id", "name", name=op.f("uq_group_organisation_id")
        ),
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_group_organisation_id"),
        "group",
        ["organisation_id"],
        unique=False,
        schema="auth",
    )
    op.create_table(
        "subscription",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("organisation_id", sa.Integer(), nullable=True),
        sa.Column("package_id", sa.Integer(), nullable=True),
        sa.Column("is_current", sa.Boolean(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["organisation_id"],
            ["auth.organisation.id"],
            name=op.f("fk_subscription_organisation_id_organisation"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["package_id"],
            ["auth.package.id"],
            name=op.f("fk_subscription_package_id_package"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_subscription")),
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_subscription_end_date"),
        "subscription",
        ["end_date"],
        unique=False,
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_subscription_is_active"),
        "subscription",
        ["is_active"],
        unique=False,
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_subscription_is_current"),
        "subscription",
        ["is_current"],
        unique=False,
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_subscription_organisation_id"),
        "subscription",
        ["organisation_id"],
        unique=False,
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_subscription_package_id"),
        "subscription",
        ["package_id"],
        unique=False,
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_subscription_start_date"),
        "subscription",
        ["start_date"],
        unique=False,
        schema="auth",
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("organisation_id", sa.Integer(), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["organisation_id"],
            ["auth.organisation.id"],
            name=op.f("fk_user_organisation_id_organisation"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
        sa.UniqueConstraint("email", name=op.f("uq_user_email")),
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_user_organisation_id"),
        "user",
        ["organisation_id"],
        unique=False,
        schema="auth",
    )
    op.create_table(
        "table",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("dataset_id", sa.Integer(), nullable=True),
        sa.Column("period_type", sa.String(), nullable=True),
        sa.Column("period_name", sa.String(), nullable=True),
        sa.Column("period_date", sa.Date(), nullable=True),
        sa.Column("service_id", sa.Integer(), nullable=True),
        sa.Column("service_handle", sa.String(), nullable=True),
        sa.Column("documentation_link", sa.String(), nullable=True),
        sa.Column("is_hidden", sa.Boolean(), nullable=True),
        sa.Column("is_locked", sa.Boolean(), nullable=True),
        sa.Column("max_fields", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["meta.dataset.id"],
            name=op.f("fk_table_dataset_id_dataset"),
        ),
        sa.ForeignKeyConstraint(
            ["service_id"],
            ["meta.service.id"],
            name=op.f("fk_table_service_id_service"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_table")),
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_table_dataset_id"),
        "table",
        ["dataset_id"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_table_is_hidden"),
        "table",
        ["is_hidden"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_table_is_locked"),
        "table",
        ["is_locked"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_table_service_id"),
        "table",
        ["service_id"],
        unique=False,
        schema="meta",
    )
    op.create_table(
        "group_user",
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["auth.group.id"],
            name=op.f("fk_group_user_group_id_group"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth.user.id"],
            name=op.f("fk_group_user_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("group_id", "user_id", name=op.f("pk_group_user")),
        schema="auth",
    )
    op.create_table(
        "subscription_group",
        sa.Column("subscription_id", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["auth.group.id"],
            name=op.f("fk_subscription_group_group_id_group"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["subscription_id"],
            ["auth.subscription.id"],
            name=op.f("fk_subscription_group_subscription_id_subscription"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "subscription_id", "group_id", name=op.f("pk_subscription_group")
        ),
        schema="auth",
    )
    op.create_table(
        "branch",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("table_id", sa.Integer(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("is_root", sa.Boolean(), nullable=True),
        sa.Column("is_multi", sa.Boolean(), nullable=True),
        sa.Column("multi_type", sa.Integer(), nullable=True),
        sa.Column("path", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"], ["meta.branch.id"], name=op.f("fk_branch_parent_id_branch")
        ),
        sa.ForeignKeyConstraint(
            ["table_id"], ["meta.table.id"], name=op.f("fk_branch_table_id_table")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_branch")),
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_branch_is_root"),
        "branch",
        ["is_root"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_branch_parent_id"),
        "branch",
        ["parent_id"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_branch_table_id"),
        "branch",
        ["table_id"],
        unique=False,
        schema="meta",
    )
    op.create_table(
        "table_handle",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("table_id", sa.Integer(), nullable=True),
        sa.Column("handle", sa.String(), nullable=True),
        sa.Column("index_handle", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["table_id"], ["meta.table.id"], name=op.f("fk_table_handle_table_id_table")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_table_handle")),
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_table_handle_handle"),
        "table_handle",
        ["handle"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_table_handle_table_id"),
        "table_handle",
        ["table_id"],
        unique=False,
        schema="meta",
    )
    op.create_table(
        "saved_workspace",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["auth.user.id"], name=op.f("fk_saved_workspace_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_saved_workspace")),
        schema="space",
    )
    op.create_table(
        "field",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("table_id", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("handle", sa.String(), nullable=True),
        sa.Column("table_handle_id", sa.Integer(), nullable=True),
        sa.Column("branch_id", sa.Integer(), nullable=True),
        sa.Column("is_numeric", sa.Boolean(), nullable=True),
        sa.Column("numeric_type", sa.String(), nullable=True),
        sa.Column("sort_order", sa.Integer(), nullable=True),
        sa.Column("is_hidden", sa.Boolean(), nullable=True),
        sa.Column("is_locked", sa.Boolean(), nullable=True),
        sa.Column("check_weights", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["branch_id"], ["meta.branch.id"], name=op.f("fk_field_branch_id_branch")
        ),
        sa.ForeignKeyConstraint(
            ["table_handle_id"],
            ["meta.table_handle.id"],
            name=op.f("fk_field_table_handle_id_table_handle"),
        ),
        sa.ForeignKeyConstraint(
            ["table_id"], ["meta.table.id"], name=op.f("fk_field_table_id_table")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_field")),
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_field_branch_id"),
        "field",
        ["branch_id"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_field_check_weights"),
        "field",
        ["check_weights"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_field_is_hidden"),
        "field",
        ["is_hidden"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_field_is_locked"),
        "field",
        ["is_locked"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_field_table_handle_id"),
        "field",
        ["table_handle_id"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_field_table_id"),
        "field",
        ["table_id"],
        unique=False,
        schema="meta",
    )
    op.create_table(
        "package_content",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("package_id", sa.Integer(), nullable=True),
        sa.Column("dataset_id", sa.Integer(), nullable=True),
        sa.Column("table_id", sa.Integer(), nullable=True),
        sa.Column("field_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["meta.dataset.id"],
            name=op.f("fk_package_content_dataset_id_dataset"),
        ),
        sa.ForeignKeyConstraint(
            ["package_id"],
            ["auth.package.id"],
            name=op.f("fk_package_content_package_id_package"),
        ),
        sa.ForeignKeyConstraint(
            ["table_id", "field_id"],
            ["meta.field.table_id", "meta.field.field_id"],
            name=op.f("fk_package_content_table_id_field"),
        ),
        sa.ForeignKeyConstraint(
            ["table_id"],
            ["meta.table.id"],
            name=op.f("fk_package_content_table_id_table"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_package_content")),
        sa.UniqueConstraint(
            "package_id",
            "dataset_id",
            "table_id",
            "field_id",
            name=op.f("uq_package_content_package_id"),
        ),
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_package_content_dataset_id"),
        "package_content",
        ["dataset_id"],
        unique=False,
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_package_content_field_id"),
        "package_content",
        ["field_id"],
        unique=False,
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_package_content_package_id"),
        "package_content",
        ["package_id"],
        unique=False,
        schema="auth",
    )
    op.create_index(
        op.f("ix_auth_package_content_table_id"),
        "package_content",
        ["table_id"],
        unique=False,
        schema="auth",
    )
    op.create_table(
        "table_weight",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("table_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("weight_field_id", sa.Integer(), nullable=True),
        sa.Column("index_field_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["index_field_id"],
            ["meta.field.id"],
            name=op.f("fk_table_weight_index_field_id_field"),
        ),
        sa.ForeignKeyConstraint(
            ["table_id"], ["meta.table.id"], name=op.f("fk_table_weight_table_id_table")
        ),
        sa.ForeignKeyConstraint(
            ["weight_field_id"],
            ["meta.field.id"],
            name=op.f("fk_table_weight_weight_field_id_field"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_table_weight")),
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_table_weight_index_field_id"),
        "table_weight",
        ["index_field_id"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_table_weight_table_id"),
        "table_weight",
        ["table_id"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_table_weight_weight_field_id"),
        "table_weight",
        ["weight_field_id"],
        unique=False,
        schema="meta",
    )
    op.create_table(
        "translation",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("field_id", sa.Integer(), nullable=True),
        sa.Column("level", sa.String(), nullable=True),
        sa.Column("level_label", sa.String(), nullable=True),
        sa.Column("sort_order", sa.Integer(), nullable=True),
        sa.Column("is_na", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["field_id"], ["meta.field.id"], name=op.f("fk_translation_field_id_field")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_translation")),
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_translation_field_id"),
        "translation",
        ["field_id"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_translation_level"),
        "translation",
        ["level"],
        unique=False,
        schema="meta",
    )
    op.create_table(
        "field_name",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("field_id", sa.Integer(), nullable=True),
        sa.Column("table_weight_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["field_id"], ["meta.field.id"], name=op.f("fk_field_name_field_id_field")
        ),
        sa.ForeignKeyConstraint(
            ["table_weight_id"],
            ["meta.table_weight.id"],
            name=op.f("fk_field_name_table_weight_id_table_weight"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_field_name")),
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_field_name_field_id"),
        "field_name",
        ["field_id"],
        unique=False,
        schema="meta",
    )
    op.create_index(
        op.f("ix_meta_field_name_table_weight_id"),
        "field_name",
        ["table_weight_id"],
        unique=False,
        schema="meta",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_meta_field_name_table_weight_id"),
        table_name="field_name",
        schema="meta",
    )
    op.drop_index(
        op.f("ix_meta_field_name_field_id"), table_name="field_name", schema="meta"
    )
    op.drop_table("field_name", schema="meta")
    op.drop_index(
        op.f("ix_meta_translation_level"), table_name="translation", schema="meta"
    )
    op.drop_index(
        op.f("ix_meta_translation_field_id"), table_name="translation", schema="meta"
    )
    op.drop_table("translation", schema="meta")
    op.drop_index(
        op.f("ix_meta_table_weight_weight_field_id"),
        table_name="table_weight",
        schema="meta",
    )
    op.drop_index(
        op.f("ix_meta_table_weight_table_id"), table_name="table_weight", schema="meta"
    )
    op.drop_index(
        op.f("ix_meta_table_weight_index_field_id"),
        table_name="table_weight",
        schema="meta",
    )
    op.drop_table("table_weight", schema="meta")
    op.drop_index(
        op.f("ix_auth_package_content_table_id"),
        table_name="package_content",
        schema="auth",
    )
    op.drop_index(
        op.f("ix_auth_package_content_package_id"),
        table_name="package_content",
        schema="auth",
    )
    op.drop_index(
        op.f("ix_auth_package_content_field_id"),
        table_name="package_content",
        schema="auth",
    )
    op.drop_index(
        op.f("ix_auth_package_content_dataset_id"),
        table_name="package_content",
        schema="auth",
    )
    op.drop_table("package_content", schema="auth")
    op.drop_index(op.f("ix_meta_field_table_id"), table_name="field", schema="meta")
    op.drop_index(
        op.f("ix_meta_field_table_handle_id"), table_name="field", schema="meta"
    )
    op.drop_index(op.f("ix_meta_field_is_locked"), table_name="field", schema="meta")
    op.drop_index(op.f("ix_meta_field_is_hidden"), table_name="field", schema="meta")
    op.drop_index(
        op.f("ix_meta_field_check_weights"), table_name="field", schema="meta"
    )
    op.drop_index(op.f("ix_meta_field_branch_id"), table_name="field", schema="meta")
    op.drop_table("field", schema="meta")
    op.drop_table("saved_workspace", schema="space")
    op.drop_index(
        op.f("ix_meta_table_handle_table_id"), table_name="table_handle", schema="meta"
    )
    op.drop_index(
        op.f("ix_meta_table_handle_handle"), table_name="table_handle", schema="meta"
    )
    op.drop_table("table_handle", schema="meta")
    op.drop_index(op.f("ix_meta_branch_table_id"), table_name="branch", schema="meta")
    op.drop_index(op.f("ix_meta_branch_parent_id"), table_name="branch", schema="meta")
    op.drop_index(op.f("ix_meta_branch_is_root"), table_name="branch", schema="meta")
    op.drop_table("branch", schema="meta")
    op.drop_table("subscription_group", schema="auth")
    op.drop_table("group_user", schema="auth")
    op.drop_index(op.f("ix_meta_table_service_id"), table_name="table", schema="meta")
    op.drop_index(op.f("ix_meta_table_is_locked"), table_name="table", schema="meta")
    op.drop_index(op.f("ix_meta_table_is_hidden"), table_name="table", schema="meta")
    op.drop_index(op.f("ix_meta_table_dataset_id"), table_name="table", schema="meta")
    op.drop_table("table", schema="meta")
    op.drop_index(
        op.f("ix_auth_user_organisation_id"), table_name="user", schema="auth"
    )
    op.drop_table("user", schema="auth")
    op.drop_index(
        op.f("ix_auth_subscription_start_date"),
        table_name="subscription",
        schema="auth",
    )
    op.drop_index(
        op.f("ix_auth_subscription_package_id"),
        table_name="subscription",
        schema="auth",
    )
    op.drop_index(
        op.f("ix_auth_subscription_organisation_id"),
        table_name="subscription",
        schema="auth",
    )
    op.drop_index(
        op.f("ix_auth_subscription_is_current"),
        table_name="subscription",
        schema="auth",
    )
    op.drop_index(
        op.f("ix_auth_subscription_is_active"), table_name="subscription", schema="auth"
    )
    op.drop_index(
        op.f("ix_auth_subscription_end_date"), table_name="subscription", schema="auth"
    )
    op.drop_table("subscription", schema="auth")
    op.drop_index(
        op.f("ix_auth_group_organisation_id"), table_name="group", schema="auth"
    )
    op.drop_table("group", schema="auth")
    op.drop_table("trend", schema="space")
    op.drop_table("pivot", schema="space")
    op.drop_table("panel", schema="space")
    op.drop_table("data_import", schema="space")
    op.drop_table("dashboard", schema="space")
    op.drop_table("service", schema="meta")
    op.drop_index(
        op.f("ix_meta_dataset_is_locked"), table_name="dataset", schema="meta"
    )
    op.drop_index(
        op.f("ix_meta_dataset_is_hidden"), table_name="dataset", schema="meta"
    )
    op.drop_table("dataset", schema="meta")
    op.drop_table("package", schema="auth")
    op.drop_table("organisation", schema="auth")
    # ### end Alembic commands ###
